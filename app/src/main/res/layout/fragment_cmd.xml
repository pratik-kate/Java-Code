<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#FFFFFF"
    android:orientation="vertical"
    tools:context=".fragments.CmdFragment">

    <TextView
        android:id="@+id/textView113"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginStart="10dp"
        android:layout_marginEnd="10dp"
        android:fontFamily="@font/aclonica"
        android:gravity="center"
        android:text="@string/command_line_arguments"
        android:textColor="@color/master"
        android:textSize="24sp" />

    <TextView
        android:id="@+id/textView114"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginStart="10dp"
        android:layout_marginTop="30dp"
        android:layout_marginEnd="10dp"
        android:gravity="center"
        android:text="The command line argument is the argument that passed to a program during runtime. It is the way to pass argument to the main method in Java. These arguments store into the String type args parameter which is main method parameter. \n To access these arguments, you can simply traverse the args parameter in the loop or use direct index value because args is an array of type String."
        android:textColor="#000000"
        android:textSize="18sp" />

    <TextView
        android:id="@+id/textView115"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginStart="10dp"
        android:layout_marginTop="30dp"
        android:layout_marginEnd="10dp"
        android:gravity="center"
        android:text="In this example, we created a class HelloWorld and during running the program we are providing command-line argument."
        android:textColor="#000000"
        android:textSize="18sp" />

    <ImageView
        android:id="@+id/imageView26"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:contentDescription="@string/image"
        android:scaleType="fitXY"
        android:src="@drawable/cmdeg" />

    <TextView
        android:id="@+id/textView116"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginStart="10dp"
        android:layout_marginTop="10dp"
        android:layout_marginEnd="10dp"
        android:gravity="center"
        android:text=" if we run cmd class that contains main method and we provide argument to it during runtime, then the syntax would be like."
        android:textColor="#000000"
        android:textSize="18sp" />

    <TextView
        android:id="@+id/textView117"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginStart="20dp"
        android:layout_marginTop="10dp"
        android:layout_marginEnd="10dp"
        android:text="Execute this program as,\n\t\t\t java cmd 10 20 30"
        android:textColor="#000000"
        android:textSize="18sp" />

    <TextView
        android:id="@+id/textView118"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginStart="30dp"
        android:layout_marginTop="10dp"
        android:layout_marginEnd="10dp"
        android:text="Output:\n\t10\n\t20\n\t30"
        android:textColor="#000000"
        android:textSize="18sp" />
</LinearLayout>