<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#FFFFFF"
    tools:context=".topics.OperatorsActivity">

    <androidx.appcompat.widget.Toolbar
        android:id="@+id/toolbar4"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:background="?attr/colorPrimary"
        android:minHeight="?attr/actionBarSize"
        android:theme="?attr/actionBarTheme"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:title="Operators"
        app:titleTextColor="#FFFFFF" />

    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_marginTop="10dp"
        android:layout_marginBottom="10dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/toolbar4">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical">

            <TextView
                android:id="@+id/textView66"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="10dp"
                android:layout_marginEnd="10dp"
                android:fontFamily="@font/aclonica"
                android:gravity="center"
                android:text="Operators In Java"
                android:textColor="@color/master"
                android:textSize="24sp" />

            <TextView
                android:id="@+id/textView68"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="10dp"
                android:layout_marginTop="30dp"
                android:layout_marginEnd="10dp"
                android:gravity="center"
                android:text="Operator is a symbol which tells to the compiler to perform some operation. Java provides a rich set of operators do deal with various types of operations."
                android:textColor="#000000"
                android:textSize="18sp" />

            <TextView
                android:id="@+id/textView69"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="20dp"
                android:layout_marginTop="30dp"
                android:layout_marginEnd="10dp"
                android:text="Java operators can be divided into following categories:"
                android:textColor="#000000"
                android:textSize="18sp" />

            <TextView
                android:id="@+id/textView88"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="60dp"
                android:layout_marginTop="10dp"
                android:layout_marginEnd="30dp"
                android:text="1.Arithmetic operators \n2.Relation operators \n3.Logical operators \n4.Bitwise operators \n5.Assignment operators \n6.Conditional operators"
                android:textColor="#000000"
                android:textSize="18sp" />

            <TextView
                android:id="@+id/textView89"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="10dp"
                android:layout_marginTop="30dp"
                android:layout_marginEnd="10dp"
                android:text="1.Arithmetic operators"
                android:textColor="#000000"
                android:textSize="24sp"
                android:textStyle="bold" />

            <TextView
                android:id="@+id/textView90"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="20dp"
                android:layout_marginTop="10dp"
                android:layout_marginEnd="10dp"
                android:text="Arithmetic operators are used to perform arithmetic operations like: addition, subtraction etc and helpful to solve mathematical expressions. The below table contains Arithmetic operators."
                android:textColor="#000000"
                android:textSize="18sp" />

            <ImageView
                android:id="@+id/imageView20"
                android:layout_width="wrap_content"
                android:layout_height="323dp"
                android:layout_marginStart="10dp"
                android:layout_marginTop="10dp"
                android:layout_marginEnd="10dp"
                android:scaleType="fitXY"
                app:srcCompat="@drawable/loperators" />

            <TextView
                android:id="@+id/textView103"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="10dp"
                android:layout_marginTop="30dp"
                android:layout_marginEnd="10dp"
                android:text="2.Relation operators"
                android:textColor="#000000"
                android:textSize="24sp"
                android:textStyle="bold" />

            <TextView
                android:id="@+id/textView94"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="30dp"
                android:layout_marginTop="10dp"
                android:layout_marginEnd="10dp"
                android:text="Relational operators are used to test comparison between operands or values. It can be use to test whether two values are equal or not equal or less than or greater than etc."
                android:textColor="#000000"
                android:textSize="18sp" />

            <ImageView
                android:id="@+id/imageView22"
                android:layout_width="match_parent"
                android:layout_height="323dp"
                android:layout_marginStart="10dp"
                android:layout_marginTop="10dp"
                android:layout_marginEnd="10dp"
                android:scaleType="fitXY"
                app:srcCompat="@drawable/roperators" />

            <TextView
                android:id="@+id/textView99"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="10dp"
                android:layout_marginTop="30dp"
                android:layout_marginEnd="10dp"
                android:text="3.Logical operators"
                android:textColor="#000000"
                android:textSize="24sp"
                android:textStyle="bold" />

            <TextView
                android:id="@+id/textView100"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="30dp"
                android:layout_marginTop="10dp"
                android:layout_marginEnd="10dp"
                android:text="Logical Operators are used to check conditional expression. For example, we can use logical operators in if statement to evaluate conditional based expression. We can use them into loop as well to evaluate a condition."
                android:textColor="#000000"
                android:textSize="18sp" />

            <ImageView
                android:id="@+id/imageView23"
                android:layout_width="match_parent"
                android:layout_height="230dp"
                android:layout_marginStart="10dp"
                android:layout_marginTop="10dp"
                android:layout_marginEnd="10dp"
                android:scaleType="fitXY"
                app:srcCompat="@drawable/aoperators" />

            <TextView
                android:id="@+id/textView101"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="10dp"
                android:layout_marginTop="30dp"
                android:layout_marginEnd="10dp"
                android:text="4.Bitwise operators"
                android:textColor="#000000"
                android:textSize="24sp"
                android:textStyle="bold" />

            <TextView
                android:id="@+id/textView102"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="30dp"
                android:layout_marginTop="10dp"
                android:layout_marginEnd="10dp"
                android:text="Bitwise operators are used to perform operations bit by bit.  Java defines several bitwise operators that can be applied to the integer types long, int, short, char and byte."
                android:textColor="#000000"
                android:textSize="18sp" />

            <ImageView
                android:id="@+id/imageView24"
                android:layout_width="match_parent"
                android:layout_height="230dp"
                android:layout_marginStart="10dp"
                android:layout_marginTop="10dp"
                android:layout_marginEnd="10dp"
                android:scaleType="fitXY"
                app:srcCompat="@drawable/boperators" />

            <TextView
                android:id="@+id/textView104"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="10dp"
                android:layout_marginTop="30dp"
                android:layout_marginEnd="10dp"
                android:text="5.Assignment Operators"
                android:textColor="#000000"
                android:textSize="24sp"
                android:textStyle="bold" />

            <TextView
                android:id="@+id/textView105"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="30dp"
                android:layout_marginTop="10dp"
                android:layout_marginEnd="10dp"
                android:text="Assignment operators are used to assign a value to a variable. It can also be used combine with arithmetic operators to perform arithmetic operations and then assign the result to the variable. Assignment operator supported by Java are as follows:"
                android:textColor="#000000"
                android:textSize="18sp" />

            <ImageView
                android:id="@+id/imageView25"
                android:layout_width="match_parent"
                android:layout_height="300dp"
                android:layout_marginStart="10dp"
                android:layout_marginTop="10dp"
                android:layout_marginEnd="10dp"
                android:scaleType="fitXY"
                app:srcCompat="@drawable/asoperators" />

            <TextView
                android:id="@+id/textView106"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="10dp"
                android:layout_marginTop="30dp"
                android:layout_marginEnd="10dp"
                android:text="6.Conditional operator"
                android:textColor="#000000"
                android:textSize="24sp"
                android:textStyle="bold" />

            <TextView
                android:id="@+id/textView107"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="30dp"
                android:layout_marginTop="10dp"
                android:layout_marginEnd="10dp"
                android:text="It is also known as ternary operator because it works with three operands. It is short alternate of if-else statement. It can be used to evaluate Boolean expression and return either true or false value"
                android:textColor="#000000"
                android:textSize="18sp" />

            <TextView
                android:id="@+id/textView108"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="50dp"
                android:layout_marginTop="10dp"
                android:layout_marginEnd="10dp"
                android:text="epr1 ? expr2 : expr3"
                android:textColor="#000000"
                android:textSize="18sp" />

        </LinearLayout>
    </ScrollView>
</androidx.constraintlayout.widget.ConstraintLayout>